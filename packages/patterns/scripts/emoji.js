const fs = require("fs");

let maxBacktrack = 2;

function readPatternPackage(path) {
    let patternPath = `${path}/node_modules/emoji-test-regex-pattern/dist/latest/javascript.txt`;
    if (fs.existsSync(patternPath)) {
        return fs.readFileSync(patternPath, "utf8").toString().trim();
    }
}

function hasNodeModules(path) {
    return fs.existsSync(`${path}/node_modules`);
}

function readPatterns(path) {
    if (hasNodeModules(path)) {
        let pattern = readPatternPackage(path);
        if (pattern) {
            return pattern;
        }
        maxBacktrack--;
    }
    if (maxBacktrack > 0) {
        return readPatterns(fs.realpathSync(`${path}/..`));
    } else {
        throw Error(`max backtrack reached: ended at ${path}`);
    }
}

const pattern = readPatterns(__dirname);
const output = `
// DO NOT MODIFY THIS FILE!
// generated by emoji.js

export const emoji = "${pattern}"
export default emoji
`;

fs.writeFileSync("./src/emoji.ts", output);
